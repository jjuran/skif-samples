#!/usr/bin/env minivx

let filename = argv[ 1 ]

run [ "skif make -g 256x256*8 -m palette" / ' ', filename ]

# $0F  ...  $FF
# ...       ...
# $00  ...  $F0

var skif = packed load filename

let row_major = 0 .. 15 map { packed byte  v       * 16^3 } per packed
let col_minor = 0 .. 15 map { packed byte (v * 16) * 16   } per packed

let rows_major = row_major
let cols_minor = col_minor * 256

let image = rows_major ~ cols_minor

let meta = skif[ image.size -> skif.size ]

def encode (x) { u16.encode (x * (1 + 16 + 16^2 + 16^3)) }

def r (x) {   encode (x mod 16)  }
def g (x) { ~(encode (x div 16)) }
def b (x) { ~(encode (x mod 16)) }

let colors = 0 .. 255 map {x"0000", (r, g, b) v} per packed

let p = (begin meta).find("clut") + 16

skif = image p.past colors (p + colors.size).rest

rewrite filename <== skif
